-- =====================================================
-- SNOWFLAKE CYBERSECURITY DEMO - DATABASE SCHEMA
-- Complete schema for cybersecurity AI/ML use cases
-- =====================================================

-- Create database and schema
CREATE DATABASE IF NOT EXISTS CYBERSECURITY_DEMO;
USE DATABASE CYBERSECURITY_DEMO;
CREATE SCHEMA IF NOT EXISTS SECURITY_AI;
USE SCHEMA SECURITY_AI;

-- =====================================================
-- CORE SECURITY TABLES
-- =====================================================

-- 1. User Authentication Logs - Core for anomaly detection
CREATE OR REPLACE TABLE USER_AUTHENTICATION_LOGS (
    LOG_ID STRING PRIMARY KEY,
    TIMESTAMP TIMESTAMP_NTZ,
    USER_ID STRING,
    USERNAME STRING,
    EMAIL STRING,
    EVENT_TYPE STRING, -- login, logout, failed_login
    SOURCE_IP STRING,
    USER_AGENT STRING,
    LOCATION OBJECT, -- {country, region, city, lat, lon}
    SUCCESS BOOLEAN,
    FAILURE_REASON STRING,
    SESSION_ID STRING,
    DEVICE_INFO OBJECT, -- {device_type, os, browser}
    RISK_FACTORS ARRAY, -- [unusual_location, unusual_time, etc.]
    MFA_USED BOOLEAN
);

-- 2. Network Security Logs - For threat hunting
CREATE OR REPLACE TABLE NETWORK_SECURITY_LOGS (
    LOG_ID STRING PRIMARY KEY,
    TIMESTAMP TIMESTAMP_NTZ,
    SOURCE_IP STRING,
    DEST_IP STRING,
    SOURCE_PORT INTEGER,
    DEST_PORT INTEGER,
    PROTOCOL STRING,
    BYTES_TRANSFERRED INTEGER,
    ACTION STRING, -- allow, block, drop
    RULE_NAME STRING,
    THREAT_CATEGORY STRING,
    SEVERITY STRING -- low, medium, high, critical
);

-- 3. Vulnerability Scan Results - For prioritization
CREATE OR REPLACE TABLE VULNERABILITY_SCANS (
    VULN_ID STRING PRIMARY KEY,
    SCAN_DATE TIMESTAMP_NTZ,
    ASSET_ID STRING,
    ASSET_NAME STRING,
    CVE_ID STRING,
    CVSS_SCORE FLOAT,
    SEVERITY STRING,
    DESCRIPTION STRING,
    EXPLOITABILITY_SCORE FLOAT,
    IMPACT_SCORE FLOAT,
    STATUS STRING, -- open, patched, accepted_risk
    FIRST_DETECTED TIMESTAMP_NTZ,
    LAST_SEEN TIMESTAMP_NTZ
);

-- 4. Security Incidents - For threat prioritization
CREATE OR REPLACE TABLE SECURITY_INCIDENTS (
    INCIDENT_ID STRING PRIMARY KEY,
    CREATED_AT TIMESTAMP_NTZ,
    TITLE STRING,
    DESCRIPTION STRING,
    SEVERITY STRING,
    STATUS STRING, -- open, investigating, resolved, closed
    ASSIGNED_TO STRING,
    AFFECTED_SYSTEMS ARRAY,
    INDICATORS_OF_COMPROMISE ARRAY,
    ESTIMATED_IMPACT_SCORE FLOAT,
    ACTUAL_IMPACT_SCORE FLOAT,
    RESOLUTION_TIME_HOURS INTEGER
);

-- 5. Financial Transactions - For fraud detection
CREATE OR REPLACE TABLE FINANCIAL_TRANSACTIONS (
    TRANSACTION_ID STRING PRIMARY KEY,
    TIMESTAMP TIMESTAMP_NTZ,
    USER_ID STRING,
    ACCOUNT_ID STRING,
    TRANSACTION_TYPE STRING, -- transfer, withdrawal, deposit, purchase
    AMOUNT DECIMAL(15,2),
    CURRENCY STRING,
    MERCHANT STRING,
    LOCATION OBJECT,
    DEVICE_FINGERPRINT STRING,
    IP_ADDRESS STRING,
    IS_SUSPICIOUS BOOLEAN,
    FRAUD_SCORE FLOAT
);

-- 6. Threat Intelligence Feed - Marketplace integration demo
CREATE OR REPLACE TABLE THREAT_INTEL_FEED (
    FEED_ID STRING PRIMARY KEY,
    TIMESTAMP TIMESTAMP_NTZ,
    INDICATOR_TYPE STRING, -- ip, domain, hash, url
    INDICATOR_VALUE STRING,
    THREAT_TYPE STRING, -- malware, botnet, phishing, apt
    SEVERITY STRING,
    CONFIDENCE_SCORE FLOAT,
    DESCRIPTION STRING,
    SOURCE STRING, -- commercial_feed, open_source, internal
    TAGS ARRAY
);

-- 7. Employee Data - For context and insider threat detection
CREATE OR REPLACE TABLE EMPLOYEE_DATA (
    EMPLOYEE_ID STRING PRIMARY KEY,
    USERNAME STRING,
    EMAIL STRING,
    DEPARTMENT STRING,
    ROLE STRING,
    MANAGER_ID STRING,
    HIRE_DATE DATE,
    SECURITY_CLEARANCE STRING,
    ACCESS_LEVEL STRING,
    STATUS STRING -- active, terminated, suspended
);

-- 8. Data Access Logs - For insider threat and data exfiltration
CREATE OR REPLACE TABLE DATA_ACCESS_LOGS (
    ACCESS_ID STRING PRIMARY KEY,
    TIMESTAMP TIMESTAMP_NTZ,
    USER_ID STRING,
    USERNAME STRING,
    RESOURCE_TYPE STRING, -- database, file_share, application
    RESOURCE_NAME STRING,
    ACTION STRING, -- read, write, delete, download
    DATA_CLASSIFICATION STRING, -- public, internal, confidential, restricted
    BYTES_ACCESSED INTEGER,
    SOURCE_IP STRING,
    SUCCESS BOOLEAN
);

-- =====================================================
-- PERFORMANCE OPTIMIZATION
-- =====================================================

-- Add clustering keys for better query performance
ALTER TABLE USER_AUTHENTICATION_LOGS CLUSTER BY (DATE(TIMESTAMP), USERNAME);
ALTER TABLE NETWORK_SECURITY_LOGS CLUSTER BY (DATE(TIMESTAMP), SOURCE_IP);
ALTER TABLE VULNERABILITY_SCANS CLUSTER BY (SCAN_DATE, SEVERITY);
ALTER TABLE SECURITY_INCIDENTS CLUSTER BY (CREATED_AT, SEVERITY);
ALTER TABLE FINANCIAL_TRANSACTIONS CLUSTER BY (DATE(TIMESTAMP), USER_ID);

-- =====================================================
-- TAGS FOR DATA GOVERNANCE
-- =====================================================

-- Create tags for data classification and governance
CREATE TAG IF NOT EXISTS DATA_CLASSIFICATION;
CREATE TAG IF NOT EXISTS RETENTION_POLICY;
CREATE TAG IF NOT EXISTS DATA_OWNER;

-- Apply tags to tables
ALTER TABLE USER_AUTHENTICATION_LOGS SET TAG DATA_CLASSIFICATION = 'CONFIDENTIAL';
ALTER TABLE USER_AUTHENTICATION_LOGS SET TAG RETENTION_POLICY = '7_YEARS';
ALTER TABLE USER_AUTHENTICATION_LOGS SET TAG DATA_OWNER = 'SECURITY_TEAM';

ALTER TABLE FINANCIAL_TRANSACTIONS SET TAG DATA_CLASSIFICATION = 'RESTRICTED';
ALTER TABLE FINANCIAL_TRANSACTIONS SET TAG RETENTION_POLICY = '10_YEARS';
ALTER TABLE FINANCIAL_TRANSACTIONS SET TAG DATA_OWNER = 'FINANCE_TEAM';

-- =====================================================
-- INITIAL INDEXES AND CONSTRAINTS
-- =====================================================

-- Create search optimization for threat hunting queries (optional - comment out if not supported)
-- ALTER TABLE NETWORK_SECURITY_LOGS ADD SEARCH OPTIMIZATION ON EQUALITY(SOURCE_IP, DEST_IP);
-- ALTER TABLE USER_AUTHENTICATION_LOGS ADD SEARCH OPTIMIZATION ON EQUALITY(USERNAME, SOURCE_IP);  
-- ALTER TABLE THREAT_INTEL_FEED ADD SEARCH OPTIMIZATION ON EQUALITY(INDICATOR_VALUE);

COMMIT;
